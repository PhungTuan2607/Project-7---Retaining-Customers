import pandas as pd
import numpy as np
import matplotlib.pyplot as plt


users = pd.read_excel('WA_Fn-UseC_-Telco-Customer-Churn.xlsx', sheet_name='WA_Fn-UseC_-Telco-Customer-Chur')
users.shape
users.head(10)

users['Churn'] = users['Churn'].apply(lambda x: 1 if x == 'Yes' else 0)
users['Churn'].mean()

users['TotalCharges'] = users['TotalCharges'].replace(' ', np.nan).astype(float)
users.shape
users.dropna().shape
users = users.dropna()

users[['tenure', 'MonthlyCharges', 'TotalCharges']].describe()
users['MonthlyCharges'] = np.log(users['MonthlyCharges'])
users['MonthlyCharges'] = (users['MonthlyCharges'] - users['MonthlyCharges'].mean())/users['MonthlyCharges'].std()
users['TotalCharges'] = np.log(users['TotalCharges'])
users['TotalCharges'] = (users['TotalCharges'] - users['TotalCharges'].mean())/users['TotalCharges'].std()
users['tenure'] = (users['tenure'] - users['tenure'].mean())/users['tenure'].std()
users[['tenure', 'MonthlyCharges', 'TotalCharges']].describe()
continuous_vars = list(users.describe().columns)
continuous_vars

for col in list(users.columns):
    print(col, users[col].nunique())
users.groupby('gender').count()['customerID'].plot(
    kind='bar', color='skyblue', grid=True, figsize=(8,6), title='Gender'
)
plt.show()

users.groupby('InternetService').count()['customerID'].plot(
    kind='bar', color='skyblue', grid=True, figsize=(8,6), title='Internet Service'
)
plt.show()

users.groupby('PaymentMethod').count()['customerID'].plot(
    kind='bar', color='skyblue', grid=True, figsize=(8,6), title='Payment Method'
)
plt.show()
dummy_cols = []

sample_set = users[['tenure', 'MonthlyCharges', 'TotalCharges', 'Churn']].copy(deep=True)

for col in list(users.columns):
    if col not in ['tenure', 'MonthlyCharges', 'TotalCharges', 'Churn'] and users[col].nunique() < 5:
        dummy_vars = pd.get_dummies(users[col])
        dummy_vars.columns = [col+str(x) for x in dummy_vars.columns]        
        sample_set = pd.concat([sample_set, dummy_vars], axis=1)
sample_set.head(10)
sample_set.shape
list(sample_set.columns)

target_var = 'Churn'
features = [x for x in list(sample_set.columns) if x != target_var]
